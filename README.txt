FILE CONTENTS:

00-Codes

	AMPLICON SEQUENCING
	00-BeiRipMasterfile1.sh: 	provides the workflow and explanation of data preparation in codes 00-12
	01-BeiRipFilePreparation.sh: 	prepares the sequencing raw data for the BeiRip project and splits the sequences into the 16S and 18S rRNA gene amplicons. It also splits the fastq and fastqc files generated by the company in corresponding folders.
	02-BeiRipQCRaw.sh: performs 	a quality control of the raw data. It uses the program fastqc to check the quality of the raw data. The results are saved in the folder 05-qiime/01-qc. The script also uses the program multiqc to summarize the results of the fastqc analysis. The results are also saved in the folder 01-qc.
	03-BeiripAdapterRemoval.sh: 	removes the adapters from the raw data. It uses the program trimmomatic to remove the adapters. The results are saved in the folder 05-qiime/02-noadapt.
	04-BeiRipQCNoAdapt.sh: 		performs a quality control of the adapter removed data. It uses the program fastqc to check the quality of the adapter removed data. The results are saved in the folder 05-qiime/01-qc. The script also uses the program multiqc to summarize the results of the fastqc analysis. The results are also saved in the folder 01-qc.
	05-16S-BeiRipDADA2TruncationLength.sh: performs a quality and length filtering, chimera removal and paired-end merging with DADA2. It uses the program qiime2 to perform the analysis. The script runs a set of truncation length combinations to determine the optimal truncation length. The results are saved in the folder 05-qiime/HTS_16S/05-trimmingoptions.
	05-18S-BeiRipDADA2TruncationLenght.sh: performs a quality and length filtering, chimera removal and paired-end merging with DADA2. It uses the program qiime2 to perform the analysis. The script runs a set of truncation length combinations to determine the optimal truncation length. The results are saved in the folder 05-qiime/HTS_18S/05-trimmingoptions.
	06-16S-BeiRipDADA2TruncationLength.R: The output of Part 5a is checked with an R script to determine the optimal truncation length. The results are saved in the folder 05-qiime/HTS_16S/05-trimmingoptions.
	06-18S-BeiRipDADA2TruncationLength.R: The output of Part 5b is checked with an R script to determine the optimal truncation length. The results are saved in the folder 05-qiime/HTS_18S/05-trimmingoptions.
	07-16S-BeiRipRawTables.sh:	moves the raw representative sequences and the raw feature table to the folder 05-qiime/HTS_16S/04-asvtable. It also visualizes the raw feature table. The results are saved in the folder 05-qiime/HTS_16S/04-asvtable.
	07-18S-BeiRipRawTables.sh:	moves the raw representative sequences and the raw feature table to the folder 05-qiime/HTS_18S/04-asvtable. It also visualizes the raw feature table. The results are saved in the folder 05-qiime/HTS_18S/04-asvtable.
	08-16S-BeiRipTaxonomyClassification.sh: performs a taxonomic classification of the representative sequences. It uses the program qiime2 in combination with SILVA data base v. 138.1 to perform the analysis. The results are saved in the folder 05-qiime/HTS_16S/06-taxonomy.
	08-18S-BeiRipTaxonomyClassification.sh: performs a taxonomic classification of the representative sequences. It uses the program qiime2 in combination with the silva data base v 138 to perform the analysis. The results are saved in the folder 05-qiime/HTS_18S/06-taxonomy.
	09-16S-BeiRipTaxonomyFiltering-1.sh: removes the undesirable taxonomy from the representative sequences. The results are saved in the folder 05-qiime/HTS_16S/04-asvtable/02-taxfilt. The first step is to remove the chloroplasts, mitochondria and eukaryotic cells, defined by the classifier. The second step is to remove the sequences based on blasting them against bovine and human mitochondrial sequences, because not all of them were removed in the first step.
	09-16S-BeiRipTaxonomyFiltering-2.R: checks what sequences were removed using blast. The results are saved in the folder 05-qiime/HTS_16S/
	09-16S-BeiRipTaxonomyFiltering-3.sh: The third step is to remove contaminations based on the decontam software. This script prepares data for the decontam pipeline:
	09-16S-BeiRipTaxonomyFiltering-4-decontam.R: runs the decontam pipeline
	09-16S-BeiRipTaxonomyFiltering-5.sh: re-imports the decontam results into qiime2
	09-18S-BeiRipTaxonomyFiltering-1.sh: removes the undesirable taxonomy from the representative sequences. The results are saved in the folder 05-qiime/HTS_18S/04-asvtable/02-taxfilt. The filtering is a bit more complicated than for the 16S sequences, because the silva data base is not as well annotated as the greengenes2 data base and with the 18S sequencing a lot of bovine DNA was sequenced as well. The first step was to blast the representative sequences against the Bos taurus genome. Hits with >240 bp lenght and more than 97% identity were the features that were removed.
	09-18S-BeiRipTaxonomyFiltering-2.R: checks what sequences were removed using blast. The results are saved in the folder 05-qiime/HTS_18S/04-asvtable/02-mamfilt as blastcheck.txt.
	09-18S-BeiRipTaxonomyFiltering-3.sh: The second step was to remove all the other sequences that were classified by the database as mammalia.
	09-18S-BeiRipTaxonomyFiltering-4.sh: Since there were still a lot of Unassigned and unassigned Eukaryota sequences left, I decided to check if these sequences fits to any of the isolated fungal species. 
	09-18S-BeiRipTaxonomyFiltering-5.R: Checks if there are unassigned sequences that matches the fungal isolates
	09-18S-BeiRipTaxonomyFiltering-6.sh: The third step was to remove everything that was not classified as fungi.
	10-16S-BeiRipPhylogeneticTree.sh: creates a phylogenetic tree. It uses the program qiime2 to perform the analysis. The results are saved in the folder 05-qiime/HTS_16S/08-phylogenetictreemafft.
	10-18S-BeiRipPhylogeneticTree.sh: creates a phylogenetic tree. It uses the program qiime2 to perform the analysis. The results are saved in the folder 05-qiime/HTS_18S/08-phylogenetictreemafft.
	11-16S-BeiRipAlphaRarefaction.sh: performs an alpha rarefaction analysis. It uses the program qiime2 to perform the analysis. The results are saved in the folder 05-qiime/HTS_16S/09-alpha-rarefaction.
	11-18S-BeiRipAlphaRarefaction.sh: performs an alpha rarefaction analysis. It uses the program qiime2 to perform the analysis. The results are saved in the folder 05-qiime/HTS_18S/09-alpha-rarefaction.
	12-16S-BeiRipPrepForR.sh: 	prepares data for R
	12-18S-BeiRipPrepForR.sh: 	prepares data for R
	
	R-CODES
	A_ColonyFormingUnits.R		Supplementary Figure 1
	B1A_IsolateSeq_Import_Trimming_bacteria.R: quality trimming of the Sanger Sequences of the bacterial Isolates
	B1B_IsolateSeq_TaxonomyR_bacteria.R: taxonomical classification of the Sanger sequences of the bacterial Isolates - Data for Supplementary Tables 1-3
	B2A_IsolateSeq_Import_Trimming_fungi.R: quality trimming of the Sanger Sequences of the fungal Isolates
	B2B_IsolateSeq_TaxonomyR_fungi.R: taxonomical classification of the Sanger sequences of the bacterial Isolates - Data for Supplementary Table 4
	B3_GenerateListOfDoneIsolates.R: summary of isolate sequences
	C1_Isolates_Figure_P1.r - C4_Isolates_Figures_P4.r: Supplementary Figure 7
	D1A_PhyloObjectsBac.r:		creates phyloobject containing the raw reads of amplicon sequencing
	D1B_PhyloObjectsBac.r:		creates phyloobject containing the relative abundances of amplicon sequencing
	D1C_PhyloObjectsBac.r:		creates phyloobject containing the copynumber corrected raw reads of amplicon sequencing
	D1D_PhyloObjectsBac.r:		creates phyloobject containing the absolute abundances of amplicon sequencing
	D1E_PhyloObjectsBac.r:		creates phyloobject containing the copy number corrected absolute abundances of amplicon sequencing
	D1F_PhyloObjectsBac.r:		creates phyloobject containing the copy number corrected absolute abundances on species and genus levels
	D2A_PhyloObjectsFun.r:		creates phyloobject containing the raw reads of amplicon sequencing
	D2B_PhyloObjectsFun.r:		creates phyloobject containing the relative abundances of amplicon sequencing
	D2C_PhyloObjectsFun.r:		creates phyloobject containing the absolute abundances of amplicon sequencing
	D2D_PhyloObjectsFun.r:		creates phyloobject containing the absolute abundances of amplicon sequencing on species and genus levels
	D3A_PhyloObjectsComrel.r:	creates phyloobject with combined relative abundances of fungi and bacteria, including log transformation and Z-score scaling for CoNet
	E_CountsVsGenecopies.r:		correlates cfus with calculated (spike-in based or qPCR based) data
	F_blastsequenceswithisolates.r	blasts amplicon sequences with sanger sequences
	G1_TaxaPlotsBac.r:		creates Figure 1a and Supplementary Figure S4
	G2_TaxaPlotsFun.r:		creates Figure 1c and Supplementary Figure S8
	H1_GrowthCurvesBac.r:		creates Supplementary Figures S5 and S6
	H2_GrowthCurvesFun.r:		creates Supplementary Figures S9 and S10
	I1-AlphadiversityBac.r:		calculates alpha diversity of bacterial community - Figure 1d, and Supplementary Figure S11
	I1-AlphadiversityBac.r:		calculates alpha diversity of fungal community - Figure 1e, and Supplementary Figure S12
	J-AvgDist_PCoA.r:		calculates beta diversity using Bray-Curtis + PCoA - Figures 1b
	S_qPCR_CoCulture.r:		Figure 2b
	Z_18S-qPCR_primerdesign-sequencingBased.r: Supplementary Figure S36	
	Z-18S-qPCR_results.r:		Calculation of the 18S qPCR results
	Z-CoCulture_forall_new_finalplotting:r	Supplementary Figures S14-S20
	

	WHOLE GENOME SEQUENCING
	ZZ-WGS_MinionBac.sh:		QC, filtering, assembly, polishing, busco, taxonomical classification, prokka, antismash, eggnog-mapper 
	ZZ-WGS_MinionFun.sh:		QC, filtering, assembly, polishing, busco, taxonomical classifaction
	ZZ-WGS_Minionfun_AssemblyCleaning.r: assembly cleaning of the yeast assemblies

	SOME HELPER FILES
	ZZ-helper_BarPlotcolorDefiner.r
	ZZ-helper_searchEnteroGEMsforVOCs.py
	ZZ-helper_searchLABGEMsforOrganicAcids.py

01-metadata
	id_batch_key.txt		explains which sample belongs to which batch
	id_to_minionbarcode.txt		connects isolate ID with minion barcodes
	isolateinfo.txt			gives infos about the examined isolates
	samplemeta.tsv + samplemeta.txt	meta data of the meat samples
	slice-day_kex.txt		connects slice and days of ripening information

02-rawdata
	SangerSeqData_bacteria		sanger sequencing data of the bacterial isolates
	SangerSeqData_fungi		sanger sequencing data of the fungal isolates
	Co_Culture_qPCR_finalResults.txt: results of the qPCR of the Co-culture experiments
	Plate_counts.txt		plate count data



